version: '2.1'

services:
# web:
#   #restart: always
#   build: ./application/web
#   expose:
#     - "8000"
#   volumes:
#     - static-content:/usr/src/app/web/share_ai/static
#     #- session-data:/home/flask/app/ #not needed as we will use client side sessions
#
#   #spins up a reverse proxy to assign workers to incoming requests for web resources
#   command: /usr/local/bin/gunicorn -w 2 -b :8000 share_ai:app



 db:
   build: ./database/
   healthcheck:
     test: ["CMD-SHELL", "pg_isready -U postgres"]
     interval: 5s
     timeout: 5s
     retries: 5
   environment:
     POSTGRES_PASSWORD: password
   expose:
     - 5423
   ports:
     - 5432:5432
   volumes:
     - postgres-data:/var/lib/postgresql/data


 api:
   #restart: always
   build: ./application/api
   depends_on:
     db:
         condition: service_healthy
   expose:
     - "8000"
#   environment:
#     - AS=as
#     - AR=ar
#     - LDFLAGS=-L/home/sage/sage/local/lib -Wl,-rpath,/home/sage/sage/local/lib
#     - SAGE_LOGS=/home/sage/sage/logs/pkgs
#     - HOSTNAME=e2c51ccdf0b5
#     - UNAME=Linux
#     - ECLDIR=/home/sage/sage/local/lib/ecl/
#     - R_MAKEVARS_SITE=/home/sage/sage/local/lib/R/share/Makevars.site
#     - SHELL=/bin/bash
#     - TERM=xterm
#     - SAGE_ENV_SOURCED=4
#     - SAGE_DOC_MATHJAX=True
#     - OPENBLAS_NUM_THREADS=1
#     - MKDIR=mkdir
#     - PERL5LIB='/home/sage/sage/local/lib/perl5:'
#     - LIBRARY_PATH=/home/sage/sage/local/lib:/usr/lib/x86_64-linux-gnu
#     - SAGE_ORIG_PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#     - CYSIGNALS_CRASH_LOGS=/home/sage/.sage//crash_logs
#     - PYTHON_EGG_CACHE=/home/sage/.sage//.python-eggs
#     - SAGE_NUM_THREADS=1
#     - SAGE_REPO_AUTHENTICATED=ssh://git@trac.sagemath.org:2222/sage.git
#     - LC_ALL=C.UTF-8
#     - PYTHONUSERBASE=/home/sage/.sage//local
#     - DOT_SAGE=/home/sage/.sage/
#     - SAGE_SPKG_SCRIPTS=/home/sage/sage/local/var/lib/sage/scripts
#     - LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'
#     - SINGULAR_EXECUTABLE=/home/sage/sage/local/bin/Singular
#     - CPATH=/home/sage/sage/local/include:/usr/include/x86_64-linux-gnu
#     - MAXIMA_PREFIX=/home/sage/sage/local
#     - MPLCONFIGDIR=/home/sage/.sage//matplotlib-1.5.1
#     - SAGE_LOCAL=/home/sage/sage/local
#     - SAGE_REPO_ANONYMOUS=git://trac.sagemath.org/sage.git
#     - MAXIMA_USERDIR=/home/sage/.sage//maxima
#     - SAGE_STARTUP_FILE=/home/sage/.sage//init.sage
#     - SAGE_SPKG_INST=/home/sage/sage/local/var/lib/sage/installed
#     - SAGE_EXTCODE=/home/sage/sage/local/share/sage/ext
#     - SAGE_DISTFILES=/home/sage/sage/upstream
#     - SAGE_DOC_SRC=/home/sage/sage/src/doc
#     - PATH=/home/sage/sage/build/bin:/home/sage/sage/src/bin:/home/sage/sage/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#     - SAGE_ETC=/home/sage/sage/local/etc
#     - LD=ld
#     - MV=mv
#     - F90=gfortran
#     - PWD=/home/flask/app/api
#     - __sage__=
#     - IPYTHONDIR=/home/sage/.sage//ipython-5.0.0
#     - F95=gfortran
#     - LANG=C.UTF-8
#     - SAGE_ROOT=/home/sage/sage
#     - JUPYTER_CONFIG_DIR=/home/sage/.sage//jupyter-4.1
#     - SAGE_SHARE=/home/sage/sage/local/share
#     - F77=gfortran
#     - CP=cp
#     - CONFIGURED_CC=gcc
#     - LN=ln
#     - CCACHE_BASEDIR=/home/sage/sage
#     - SAGE_ORIG_PATH_SET=True
#     - CXX=g++ -std=gnu++11
#     - SAGE_PYTHON_VERSION=2
#     - SHLVL=2
#     - HOME=/home/sage
#     - TERMINFO=/home/sage/sage/local/share/terminfo
#     - MAKE=make
#     - CONFIGURED_CXX=g++ -std=gnu++11
#     - FC=gfortran
#     - CONFIGURED_OBJC=gcc
#     - CONFIGURED_FC=gfortran
#     - CYSIGNALS_CRASH_DAYS=7
#     - PIP_FORMAT=columns
#     - SAGE_SRC=/home/sage/sage/src
#     - GPHELP=/home/sage/sage/local/bin/gphelp
#     - SAGE_DOC=/home/sage/sage/local/share/doc/sage
#     - RANLIB=ranlib
#     - CONFIGURED_OBJCXX=g++
#     - SINGULARPATH=/home/sage/sage/local/share/singular
#     - CC=gcc
#     - SAGE_NUM_THREADS_PARALLEL=4
#     - CHMOD=chmod
#     - GP_DATA_DIR=/home/sage/sage/local/share/pari
#     - TOUCH=touch
#     - GPDOCDIR=/home/sage/sage/local/share/pari/doc
   volumes:
     - static-content:/usr/src/app/api/graphbrain/static
     #- session-data:/home/flask/app/ #not needed as we will use client side sessions

   #spins up a reverse proxy to assign workers to incoming requests for web resources
   command: /home/sage/sage/local/bin/gunicorn -w 2 -b :8000 graphbrain_api:app

# sage:
#   #restart: always
#   build: ./application/sage
#   depends_on:
#     db:
#         condition: service_healthy
##   expose:
##     - "8000"
#
#   environment:
#     PYTHONPATH: /home/sage/graphbrain/


 nginx:
   #restart: always
   image: graphbrain
   build: ./nginx
   #mem_limit: 256m #set memory limit for nginx so it reclaims memory
   ports:
     - 80:80

   volumes:
     - /www/static
#   volumes_from:
#     - web
   depends_on:
     db:
         condition: service_healthy
volumes:
  postgres-data: #a volume that stores postgres data
  #session-data: #a volume for storing session data
  static-content: #a volume for storing static content such as images