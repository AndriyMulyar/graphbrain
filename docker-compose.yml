version: '2'

services:
# web:
#   #restart: always
#   build: ./application/web
#   expose:
#     - "8000"
#   volumes:
#     - static-content:/usr/src/app/web/share_ai/static
#     #- session-data:/home/flask/app/ #not needed as we will use client side sessions
#
#   #spins up a reverse proxy to assign workers to incoming requests for web resources
#   command: /usr/local/bin/gunicorn -w 2 -b :8000 share_ai:app

 db:
   build: ./database/

   environment:
     POSTGRES_PASSWORD: password
   expose:
     - 5423
   ports:
     - 5432:5432
   volumes:
     - postgres-data:/var/lib/postgresql/data


# api:
#   #restart: always
#   build: ./application/api
#   depends_on:
#     - db
#   expose:
#     - "8000"
#   volumes:
#     - static-content:/usr/src/app/api/share_ai_api/static
#     #- session-data:/home/flask/app/ #not needed as we will use client side sessions
#
#   #spins up a reverse proxy to assign workers to incoming requests for web resources
#   command: /usr/local/bin/gunicorn -w 2 -b :8000 share_ai_api:app
#
# nginx:
#   #restart: always
#   image: share_ai
#   build: ./nginx
#   #mem_limit: 256m #set memory limit for nginx so it reclaims memory
#   ports:
#     - "80:80"
#   volumes:
#     - /www/static
#   volumes_from:
#     - web
#   depends_on:
#     - web
#     - api
volumes:
  postgres-data: #a volume that stores postgres data
  #session-data: #a volume for storing session data
#  static-content: #a volume for storing static content such as images